// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package bss_company_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BssCompanyApiServiceClient is the client API for BssCompanyApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BssCompanyApiServiceClient interface {
	// DescribecompanyV1 - Describe a company
	DescribeCompanyV1(ctx context.Context, in *DescribeCompanyV1Request, opts ...grpc.CallOption) (*DescribeCompanyV1Response, error)
}

type bssCompanyApiServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBssCompanyApiServiceClient(cc grpc.ClientConnInterface) BssCompanyApiServiceClient {
	return &bssCompanyApiServiceClient{cc}
}

func (c *bssCompanyApiServiceClient) DescribeCompanyV1(ctx context.Context, in *DescribeCompanyV1Request, opts ...grpc.CallOption) (*DescribeCompanyV1Response, error) {
	out := new(DescribeCompanyV1Response)
	err := c.cc.Invoke(ctx, "/ozonmp.bss_company_api.v1.BssCompanyApiService/DescribeCompanyV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BssCompanyApiServiceServer is the server API for BssCompanyApiService service.
// All implementations must embed UnimplementedBssCompanyApiServiceServer
// for forward compatibility
type BssCompanyApiServiceServer interface {
	// DescribecompanyV1 - Describe a company
	DescribeCompanyV1(context.Context, *DescribeCompanyV1Request) (*DescribeCompanyV1Response, error)
	mustEmbedUnimplementedBssCompanyApiServiceServer()
}

// UnimplementedBssCompanyApiServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBssCompanyApiServiceServer struct {
}

func (UnimplementedBssCompanyApiServiceServer) DescribeCompanyV1(context.Context, *DescribeCompanyV1Request) (*DescribeCompanyV1Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DescribeCompanyV1 not implemented")
}
func (UnimplementedBssCompanyApiServiceServer) mustEmbedUnimplementedBssCompanyApiServiceServer() {}

// UnsafeBssCompanyApiServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BssCompanyApiServiceServer will
// result in compilation errors.
type UnsafeBssCompanyApiServiceServer interface {
	mustEmbedUnimplementedBssCompanyApiServiceServer()
}

func RegisterBssCompanyApiServiceServer(s grpc.ServiceRegistrar, srv BssCompanyApiServiceServer) {
	s.RegisterService(&BssCompanyApiService_ServiceDesc, srv)
}

func _BssCompanyApiService_DescribeCompanyV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DescribeCompanyV1Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BssCompanyApiServiceServer).DescribeCompanyV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ozonmp.bss_company_api.v1.BssCompanyApiService/DescribeCompanyV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BssCompanyApiServiceServer).DescribeCompanyV1(ctx, req.(*DescribeCompanyV1Request))
	}
	return interceptor(ctx, in, info, handler)
}

// BssCompanyApiService_ServiceDesc is the grpc.ServiceDesc for BssCompanyApiService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BssCompanyApiService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ozonmp.bss_company_api.v1.BssCompanyApiService",
	HandlerType: (*BssCompanyApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DescribeCompanyV1",
			Handler:    _BssCompanyApiService_DescribeCompanyV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ozonmp/bss_company_api/v1/bss_company_api.proto",
}
