syntax = "proto3";

package ozonmp.bss_company_api.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/ozonmp/bss-company-api/pkg/bss-company-api;bss_company_api";

// BssCompanyApiService - Service for working with companys
service BssCompanyApiService {
  // CreateCompanyV1 - Create a company
  rpc CreateCompanyV1(CreateCompanyV1Request) returns (CreateCompanyV1Response) {
    option (google.api.http) = {
      get: "/v1/companys/create"
    };
  }

  // DescribeCompanyV1 - Describe a company
  rpc DescribeCompanyV1(DescribeCompanyV1Request) returns (DescribeCompanyV1Response) {
    option (google.api.http) = {
      get: "/v1/companys/describe/{company_id}"
    };
  }

  // ListCompanyV1 - List a company
  rpc ListCompanyV1(google.protobuf.Empty) returns (ListCompanyV1Response) {
    option (google.api.http) = {
      get: "/v1/companys/list"
    };
  }

  // RemoveCompanyV1 - Remove a company
  rpc RemoveCompanyV1(RemoveCompanyV1Request) returns (RemoveCompanyV1Response) {
    option (google.api.http) = {
      get: "/v1/companys/remove/{company_id}"
    };
  }
}

message Company {
  uint64 id  = 1;
  string name = 2;
  string address = 3;
  google.protobuf.Timestamp created = 4;
}

message CreateCompanyV1Request {
  string company_name = 1 [(validate.rules).string.max_len = 20];
  string address_name = 2 [(validate.rules).string.max_len = 100]; 
}

message CreateCompanyV1Response {
  Company company = 1;
}

message DescribeCompanyV1Request {
  uint64 company_id = 1 [(validate.rules).uint64.gt = 0];
}

message DescribeCompanyV1Response {
  Company value = 1;
}

message ListCompanyV1Response {
  repeated Company company = 1;
}

message RemoveCompanyV1Request {
  uint64 company_id = 1 [(validate.rules).uint64.gt = 0];
}

message RemoveCompanyV1Response {
  bool result = 1;
}
